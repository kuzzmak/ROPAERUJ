package hr.fer.zemris.trisat;

import java.util.ArrayList;
import java.util.List;

public class TriSatSolver {
	public static void main(String[] args){
	
////		List<Boolean> bol = new ArrayList<>();
////		bol.add(true);
////		bol.add(false);
////		bol.add(false);
////		bol.add(false);
////		bol.add(true);
////		bol.add(false);
////		bol.add(true);
////		
////		BitVector bv = new BitVector(bol);
////		System.out.println("bv");
////		System.out.println(bv);
////		List<Integer> ints = new ArrayList<>();
////		ints.add(-1);
////		ints.add(2);
////		ints.add(3);
////		ints.add(4);
////		ints.add(-5);
////		ints.add(-7);
////		Clause cl = new Clause(ints);
////		
////		
////		boolean newbv = Clause.isSatisfied(bv);
////		System.out.println("novi bv");
////		System.out.println(cl);
//		
//		List<Integer> list1 = new ArrayList<>();
//		list1.add(-2);
//		list1.add(3);
//		list1.add(4);
//		
//		List<Integer> list2 = new ArrayList<>();
//		list2.add(-1);
//		list2.add(-2);
//		list2.add(-3);
//		list2.add(-4);
//		
//		Clause cl1 = new Clause(list1);
//		Clause cl2 = new Clause(list2);
//		
//		List<Integer> list3 = new ArrayList<>();
//		
//		list3.add(-5);
//		list3.add(-6);
//		list3.add(-7);
//		
//		Clause cl3 = new Clause(list3);
//		
//		List<Boolean> bol = new ArrayList<>();
//		bol.add(true);
//		bol.add(false);
//		bol.add(false);
//		bol.add(false);
//		bol.add(true);
//		bol.add(false);
//		bol.add(true);
//		BitVector bv = new BitVector(bol);
//		
//		boolean tocno1 = cl1.isSatisfied(bv);
//		boolean tocno2 = cl2.isSatisfied(bv);
//		boolean tocno3 = cl3.isSatisfied(bv);
//		
////		System.out.println(bv);
////		System.out.println("cl1");
////		System.out.println(cl1);
////		System.out.println("cl2");
////		System.out.println(cl2);
////		System.out.println("cl3");
////		System.out.println(cl3);
////		System.out.println("tocno1");
////		System.out.println(tocno1);
////		System.out.println("tocno2");
////		System.out.println(tocno2);
////		System.out.println("tocno3");
////		System.out.println(tocno3);
//		
//		List<Clause> clauses = new ArrayList<>();
//		clauses.add(cl1);
//		clauses.add(cl2);
//		clauses.add(cl3);
//		
//		SATFormula formula = new SATFormula(7, clauses);
//		System.out.println(formula.isSatisfied(bv));
//		System.out.println(formula);
		
		String path = "C:\\Users\\kuzmi\\OneDrive - fer.hr\\faks\\5sem\\ROPAERUJ\\1zad\\uf20-01.cnf";
		Parser parser = new Parser(path);
		SATFormula formula = parser.parse();
		
		
		Algorithm alg = new Algorithm(formula, 1);
		String bol = "1010101001111";
		//BitVector bit = alg.transformStringToBoolean(bol);
		//System.out.println(bit);
		
		
		
	}
}
